{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","servises/GetUserById.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","TodoForm","onAdd","usersList","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","checkTitle","trim","htmlFor","type","placeholder","value","onChange","target","disabled","App","visibleTodos","setVisibleTodos","todosList","newTodo","Math","max","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.789554c2.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './UserInfo.scss';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './TodoInfo.scss';\n\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todos';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\nimport './TodoForm.scss';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todos';\nimport { getUserById } from '../../servises/GetUserById';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n  usersList: User[];\n};\n\nexport const TodoForm: React.FC<Props> = ({ onAdd, usersList }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const submit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const checkTitle = title.trim();\n\n    setHasTitleError(!checkTitle);\n    setHasUserError(userId === 0);\n\n    if (!checkTitle || userId === 0) {\n      return;\n    }\n\n    onAdd({\n      id: 1256,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      className=\"form\"\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={submit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Please enter title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user\">User:</label>\n        <select\n          id=\"user\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersList.map(user => (\n            <option value={user.id}>{user.name}</option>\n          ))}\n        </select>\n\n        {hasUserError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { getUserById } from './servises/GetUserById';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todosList: Todo[]) {\n  const maxId = Math.max(\n    ...todosList.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n\n  const addNewTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(visibleTodos),\n    };\n\n    setVisibleTodos(currentTodos => [\n      ...currentTodos,\n      newTodo,\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm usersList={usersFromServer} onAdd={addNewTodo} />\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}